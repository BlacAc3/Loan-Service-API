openapi: 3.0.0
info:
  title: Loan Management API
  description: API for managing loans, repayments, and user authentication.
  version: "1.0.0"
servers:
  - url: https://api.example.com

paths:
  /api/auth/login/:
    post:
      summary: User login to get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              example:
                username: example_user
                password: example_password
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '401':
          description: Invalid credentials

  /api/auth/register/:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                first_name: user_firstname
                last_name: user_lastname
                username: new_user
                email: user@example.com
                password: strong_password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: array
                    items:
                      type: string
                    example:
                      - "This username is already taken."

  /api/token/refresh:
    post:
      summary: Refresh access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
              example:
                refresh: eyJhbGciOiJIUzI1NiIsInR
      responses:
        '200':
          description: Access token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '404':
          description: Invalid refresh token

  /api/auth/logout/:
    post:
      summary: Logout user by invalidating the refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
              example:
                refresh: eyJhbGciOiJIUzI1NiIsInR
      responses:
        '205':
          description: Successfully logged out
        '404':
          description: Invalid token

  /api/loans/:
    get:
      summary: Get list of loans for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of loans
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    loan_amount:
                      type: number
                      format: float
                    total_interest:
                      type: number
                      format: float
                    term_months:
                      type: integer
                    status:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    approved_at:
                      type: string
                      format: date-time
                      nullable: true
        '401':
          description: Authentication credentials not provided

    post:
      summary: Apply for a new loan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loan_amount:
                  type: number
                  format: float
                total_interest:
                  type: number
                  format: float
                term_months:
                  type: integer
              example:
                loan_amount: 10000
                total_interest: 5.0
                term_months: 12
      responses:
        '201':
          description: Loan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  loan_amount:
                    type: number
                    format: float
                  total_interest:
                    type: number
                    format: float
                  term_months:
                    type: integer
                  status:
                    type: string
                  approved_at:
                    type: string
                    format: date-time
                    nullable: true
        '400':
          description: Validation error

  /api/loans/{loan_id}/approve/:
    post:
      summary: Approve or reject a loan (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: loan_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
      responses:
        '200':
          description: Loan status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  loan_amount:
                    type: number
                    format: float
                  status:
                    type: string
                  approved_at:
                    type: string
                    format: date-time
        '403':
          description: Forbidden - admin only

  /api/repayments/{loan_id}/:
    post:
      summary: Make a loan repayment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: loan_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
              example:
                amount: 500
      responses:
        '200':
          description: Repayment successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  loan_id:
                    type: integer
                  amount_paid:
                    type: number
                    format: float
                  amount_outstanding:
                    type: number
                    format: float
        '400':
          description: Repayment exceeds outstanding balance

  /api/loans/{loan_id}/schedule/:
    get:
      summary: Get the repayment schedule for a loan
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: loan_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Loan repayment schedule
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    month:
                      type: integer
                    due_date:
                      type: string
                      format: date
                    amount_due:
                      type: number
                      format: float

  /api/auth/user/:
    get:
      summary: Get current authenticated user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string

  /api/users/:
    get:
      summary: Get list of all users (admin only)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
        '403':
          description: Forbidden - admin only

  /api/users/{user_id}/:
    delete:
      summary: Delete a user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted
        '403':
          description: Forbidden - admin only
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

